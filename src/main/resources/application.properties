
logging.level.org.springframework:debug

# ==============================================================
# spring security username and password
# ==============================================================

#spring.security.user.name=rohan
#spring.security.user.password=1234


# ==============================================================
# = Keep the connection alive if idle for a long time (needed in production)
# ==============================================================
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ==============================================================
# = Show or not log for each sql query
# ==============================================================
spring.jpa.show-sql = true



# ==============================================================
# = Data Source
# ==============================================================
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/mydatabase
spring.datasource.username=root
spring.datasource.password=

# ==============================================================
# = Hibernate ddl auto (create, create-drop, update)
# ==============================================================
spring.jpa.hibernate.ddl-auto = update

# ==============================================================
# = The SQL dialect makes Hibernate generate better SQL for the chosen database
# ==============================================================
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select email, password, active from user where email=?
#spring.queries.roles-query=SELECT * FROM user u LEFT JOIN user_roles ur ON u.id = ur.users_id LEFT JOIN role r ON ur.roles_id = r.id WHERE u.email=?
spring.queries.roles-query=SELECT user.email AS username, r.roles FROM user LEFT JOIN user_roles ur ON user.id = ur.users_id LEFT JOIN role r ON ur.roles_id= r.id WHERE user.email=?
# ==============================================================
# = Initialize the database using data.sql script
# ==============================================================
spring.datasource.initialization-mode=always
